{"version":3,"sources":["lib/axios.js","utils/apis.js","utils/cookie.js","redux/modules/user.js","redux/modules/post.js","redux/modules/wish.js","redux/configStore.js","reportWebVitals.js","components/elements/Grid.js","components/elements/Image.js","components/elements/Text.js","components/Header.js","components/Post.js","pages/PostList.js","pages/Login.js","pages/Signup.js","pages/WishList.js","Shared/App.js","index.js"],"names":["instance","axios","create","baseURL","headers","accept","withCredentials","apis","get","email","postId","post","wishId","delete","user","params","getCookie","name","parts","document","cookie","split","length","pop","shift","POST_LOGIN","SET_USER","setUser","createAction","token","handleActions","state","action","produce","draft","payload","decoded","jwt_decode","console","log","isLoggedIn","actionCreators","signupMiddleware","then","res","data","result","window","alert","catch","error","errorResposnse","response","errorMessage","loginMiddleware","dispatch","value","exp","date","Date","setTime","getTime","toUTCString","setCookie","LOAD_POSTS","loadPosts","list","postList","LOAD_WISHS","ADD_WISH","DELETE_WISH","addWish","deleteWish","push","wishItem","filter","wish","history","createBrowserHistory","rootReducer","combineReducers","User","Post","Wish","router","connectRouter","middlewares","thunk","withExtraArgument","enhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","store","createStore","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Grid","props","is_flex","width","margin","padding","bg","children","styles","GridBox","defaultProps","chidren","height","styled","div","src","size","Text","bold","color","lineHeight","P","p","Header","useSelector","HeaderContainer","LogoLink","to","LogoImage","alt","ButtonWrap","HeaderButton","onClick","Link","img","button","title","spec","image","nickname","place","_id","useState","isWished","setIsWished","useDispatch","toggleWish","useCallback","wishActions","Wrap","Images","Heart","Number","setPlaceName","PostList","PostListContainer","SliderWrap","dots","infinite","autoplay","speed","slidesToShow","slidesToScroll","map","Login","pw","loginInput","setLoginInput","onChangeLogin","target","type","onChange","userActions","Signup","pwCheck","signupInput","setSignupInput","onChangeSignUp","WishList","wishList","GlobalStyle","createGlobalStyle","reset","App","useEffect","postActions","Fragment","path","exact","component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.03afc77d.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst instance = axios.create({\n  baseURL: \"http://13.124.99.118\",\n  // baseURL: \"http://localhost:4000/\",\n  headers: {\n    \"content-type\": \"application/json;charset=UTF-8\",\n    accept: \"application/json\",\n  },\n  withCredentials: true,\n});\n\nexport default instance;\n","import instance from \"../lib/axios\";\n\nexport const apis = {\n  getPosts: () => instance.get(\"/post\"),\n  // 게시물 불러오기\n  createPost: (contents) => instance.post(\"/post\", contents),\n  // 게시물 작성하기\n  editPost: (id, contents) => instance.put(`/post/${id}`, contents),\n  // 게시물 수정하기\n  deletePost: (id) => instance.delete(`/post/${id}`),\n  // 게시물 삭제하기\n\n  getWishs: (email) => instance.get(\"/wish\", email),\n  // 위시리스트 불러오기\n  addWish: (email, postId) => instance.post(\"/wish\", { email, postId }),\n  // 위시리스트 등록하기\n  deleteWish: (wishId) => instance.delete(`/wish/${wishId}`),\n  // 위시리스트 삭제하기\n  signUp: (user) => instance.post(\"/signup\", user),\n  // 회원가입 요청\n  login: (params) => instance.post(\"/login\", params),\n  // 로그인 요청\n};\n","export const getCookie = (name) => {\n  const value = \";\" + document.cookie;\n  const parts = value.split(`;${name}=`);\n\n  if (parts.length === 2) {\n    return parts.pop().split(\";\").shift();\n  }\n};\ngetCookie(\"user\");\n\nexport const setCookie = (name, value, exp = 5) => {\n  const date = new Date();\n  date.setTime(date.getTime() + exp * 24 * 60 * 60 * 1000);\n\n  document.cookie = `${name}= ${value}; expires= ${date.toUTCString()}`;\n};\n\nexport const deleteCookie = (name) => {\n  const date = new Date(\"2020-01-01\").toUTCString();\n\n  document.cookie = name + \"=; expires=\" + date;\n};\n\n// export const setCookie = (name, value, exp = 5) => {\n//   const date = new Date();\n//   date.setTime(date.getTime() + exp*24*60*60*1000);\n\n//   document.cookie = `${name}= ${value}; expires= ${date.toUTCString()}`;\n// }\n\n// export const deleteCookie = (name) => {\n//   const date = new Date(\"2020-01-01\").toUTCString();\n\n//   document.cookie = name+\"=; expires=\"+date;\n// }\n","import { createAction, handleActions } from \"redux-actions\";\nimport { produce } from \"immer\";\nimport jwt_decode from \"jwt-decode\";\nimport { apis } from \"../../utils/apis\";\nimport { setCookie } from \"../../utils/cookie\";\n\nconst POST_LOGIN = \"POST_LOGIN\";\nconst SET_USER = \"SET_USER\";\nconst LOG_OUT = \"LOG_OUT\";\n\nconst postLogin = createAction(POST_LOGIN, (user) => ({ user }));\nconst setUser = createAction(SET_USER, (token) => ({ token }));\nconst logOut = createAction(LOG_OUT, (user) => ({ user }));\n\nconst initialState = {\n  user: null,\n  isLoggedIn: false,\n};\n\nconst signupMiddleware = (user) => {\n  return () => {\n    apis\n      .signUp(user)\n      .then((res) => {\n        console.log(res.data);\n        /**\n         * res: {\n         *  result: string\n         * }\n         */\n\n        if (res?.data?.result === \"success\") {\n          window.alert(\"회원가입이 완료되었습니다.\");\n        }\n      })\n      .catch((error) => {\n        const errorResposnse = error.response;\n        const errorMessage =\n          errorResposnse?.data?.result ?? \"회원가입에 실패하였습니다.\";\n        window.alert(errorMessage);\n      });\n  };\n};\n\nconst loginMiddleware = (params) => {\n  return (dispatch) => {\n    apis\n      .login(params)\n      .then((res) => {\n        console.log(res.data);\n        const { token } = res.data;\n        dispatch(setUser(token));\n        setCookie(\"user\", token);\n      })\n      .catch((error) => {\n        window.alert(\"로그인에 실패하였습니다. 다시 시도해주세요\");\n        console.error(error);\n      });\n  };\n};\n\nexport default handleActions(\n  {\n    [POST_LOGIN]: (state, action) =>\n      produce(state, (draft) => {\n        draft.user = action.payload.user;\n      }),\n    [SET_USER]: (state, action) =>\n      produce(state, (draft) => {\n        const decoded = jwt_decode(action.payload.token);\n        console.log(decoded);\n        draft.user = decoded;\n        draft.isLoggedIn = true;\n      }),\n  },\n  initialState\n);\n\nexport const actionCreators = {\n  signupMiddleware,\n  loginMiddleware,\n  setUser,\n};\n","import { createAction, handleActions } from \"redux-actions\";\nimport { produce } from \"immer\";\nimport { apis } from \"../../utils/apis\";\n\nconst LOAD_POSTS = \"LOAD_POSTS\";\n\nconst loadPosts = createAction(LOAD_POSTS, (list) => ({ list }));\n\nconst initialState = {\n  list: [],\n};\n\nconst initialPost = {\n  postId: \"postId\",\n  title: \"인형같지만 진짜 인형인 춘식\",\n  spec: \"키 10cm x 몸무게 300g\",\n  image:\n    \"https://cfnimage.commutil.kr/phpwas/restmb_allidxmake.php?idx=3&simg=202012170917410759599ebb03838180228147171.jpg\",\n  nickname: \"닉네임\",\n  place: \"침실\",\n};\n\nconst getPostList = () => {\n  return (dispatch) => {\n    apis\n      .getPosts()\n      .then((res) => {\n        const postList = res.data.post;\n        dispatch(loadPosts(postList));\n      })\n      .catch((error) => {\n        window.alert(\"게시물을 불러오는데 실패하였습니다.\");\n        console.error(error);\n      });\n  };\n};\n\nexport default handleActions(\n  {\n    [LOAD_POSTS]: (state, action) =>\n      produce(state, (draft) => {\n        draft.list = action.payload.list;\n      }),\n  },\n  initialState\n);\n\nexport const actionCreators = {\n  getPostList,\n};\n","import { createAction, handleActions } from \"redux-actions\";\nimport { produce } from \"immer\";\nimport { apis } from \"../../utils/apis\";\n\nimport { actionCreators as postActions } from \"./post\";\n\nconst LOAD_WISHS = \"LOAD_WISHS\";\nconst ADD_WISH = \"ADD_WISH\";\nconst DELETE_WISH = \"DELETE_WISH\";\n\nconst loadWishs = createAction(LOAD_WISHS, (list) => ({ list }));\nconst addWish = createAction(ADD_WISH, (postId, email) => ({ postId, email }));\nconst deleteWish = createAction(DELETE_WISH, (postId, email) => ({\n  postId,\n  email,\n}));\n\nconst initialState = {\n  list: [],\n};\n\nconst getWishList = (email) => {\n  return (dispatch) => {\n    if (!email) return;\n\n    apis\n      .getWishs()\n      .then((res) => {\n        const wishList = res.data.wish;\n        dispatch(loadWishs(wishList));\n      })\n      .catch((error) => {\n        window.alert(\"위시리스트를 불러오는데 실패 하였습니다.\");\n        console.error(error);\n      });\n  };\n};\n\nconst addWishItem = (email, postId) => {\n  return (dispatch) => {\n    if (!email) return;\n\n    console.log(email, postId);\n\n    apis\n      .addWish(email, postId)\n      .then((res) => {\n        console.log(\"res\", res);\n        const wishItem = res?.data.wish;\n        if (wishItem) {\n          dispatch(addWish(wishItem));\n          window.alert(\"위시리스트에 등록되었습니다!\");\n        }\n      })\n      .catch((error) => {\n        window.alert(\"위시리스트에 등록되지 않았습니다. 다시 시도해주세요!\");\n        console.error(error);\n      });\n  };\n};\n\nconst deleteWishItem = (email, wishId) => {\n  return (dispatch) => {\n    if (!email) return;\n\n    apis\n      .deleteWish(email, wishId)\n      .then((res) => {\n        if (res?.data?.result === \"success\") {\n          dispatch(deleteWish(wishId));\n          window.alert(\"위시리스트에서 삭제되었습니다!\");\n        }\n      })\n      .catch((error) => {\n        window.alert(\"위시리스트에셔 삭제되지 않았습니다. 다시 시도해주세요!\");\n        console.error(error);\n      });\n  };\n};\n\nexport default handleActions(\n  {\n    [LOAD_WISHS]: (state, action) =>\n      produce(state, (draft) => {\n        draft.list = action.payload.list;\n      }),\n    [ADD_WISH]: (state, action) =>\n      produce(state, (draft) => {\n        draft.list.push(action.payload.wishItem);\n      }),\n    [DELETE_WISH]: (state, action) =>\n      produce(state, (draft) => {\n        // 같은 postId를 배열에서 찾아서 is_like를 바꿔준다.\n        draft.list = state.list.filter(\n          (wishItem) => wishItem !== action.payload.wishId\n        );\n        // draft.list.push(action.payload.list);\n      }),\n  },\n  initialState\n);\n\nexport const actionCreators = {\n  getWishList,\n  addWishItem,\n  deleteWishItem,\n};\n","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { createBrowserHistory } from \"history\";\nimport { connectRouter } from \"connected-react-router\";\n\nimport User from \"../redux/modules/user\";\nimport Post from \"../redux/modules/post\";\nimport Wish from \"../redux/modules/wish\";\n\nexport const history = createBrowserHistory();\n\nconst rootReducer = combineReducers({\n  user: User,\n  post: Post,\n  wish: Wish,\n  router: connectRouter(history),\n});\n\nconst middlewares = [thunk.withExtraArgument({ history: history })];\n\nconst env = process.env.NODE_ENV;\n\nif (env === \"development\") {\n  const { logger } = require(\"redux-logger\");\n  middlewares.push(logger);\n}\n\nconst composeEnhancers =\n  typeof window === \"object\" && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\n    : compose;\n\nconst enhancer = composeEnhancers(applyMiddleware(...middlewares));\n\nconst store = (initialStore) => createStore(rootReducer, enhancer);\n\nexport default store();\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { Fragment } from \"react\";\nimport styled from \"styled-components\";\n\nexport default function Grid(props) {\n  const { is_flex, width, margin, padding, bg, children } = props;\n\n  const styles = {\n    is_flex: is_flex,\n    width: width,\n    margin: margin,\n    padding: padding,\n    bg: bg,\n  };\n  return (\n    <Fragment>\n      <GridBox {...styles}>{children}</GridBox>\n    </Fragment>\n  );\n}\n\nGrid.defaultProps = {\n  chidren: null,\n  is_flex: false,\n  width: \"100%\",\n  height: \"100%\",\n  padding: false,\n  margin: false,\n  bg: \"#ffffff\",\n};\n\nconst GridBox = styled.div`\n  width: ${(props) => props.width};\n  height: ${(props) => props.height};\n  box-sizing: border-box;\n  ${(props) => (props.padding ? `padding: ${props.padding};` : \"\")}\n  ${(props) => (props.margin ? `margin: ${props.margin};` : \"\")}\n  ${(props) => (props.bg ? `background-color: ${props.bg};` : \"\")}\n  ${(props) =>\n    props.is_flex\n      ? `display: flex; align-items: center; justify-content: space-between; `\n      : \"\"}\n`;\n","import React ,{ Fragment } from \"react\";\nimport styled from 'styled-components';\n\nexport default function Image(props) {\n    const {shape, src, size} = props;\n\n    const styles = {\n        src: src,\n        size: size,\n    }\n\n    if(shape === \"circle\"){\n        return (\n            <ImageCircle {...styles}></ImageCircle>\n        )\n    }\n\n    if(shape === \"rectangle\"){\n        return (\n            <AspectOutter>\n                <AspectInner {...styles}></AspectInner>\n            </AspectOutter>\n        )\n    }\n\n    return (\n      <Fragment></Fragment>\n    );\n}\n\n\nImage.defaultProps = {\n  shape: \"circle\",\n  src: \"https://mean0images.s3.ap-northeast-2.amazonaws.com/4.jpeg\",\n  size: 36,\n};\n\nconst AspectOutter = styled.div`\n    width: 100%;\n    min-width: 250px;\n`;\n\nconst AspectInner = styled.div`\n    position: relative;\n    padding-top: 75%;\n    overflow: hidden;\n    background-image: url(\"${(props) => props.src}\");\n    background-size: cover;\n`;\n\nconst ImageCircle = styled.div`\n    --size: ${(props) => props.size}px;\n    width: var(--size);\n    height: var(--size);\n    border-radius: var(--size);\n\n    background-image: url(\"${(props) => props.src}\");\n    background-size: cover;\n    margin: 4px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nexport default function Text(props) {\n  const { bold, color, size, lineHeight, children } = props;\n\n  const styles = {\n    bold: bold,\n    color: color,\n    size: size,\n    lineHeight: lineHeight,\n  };\n  return <P {...styles}>{children}</P>;\n}\n\nText.defaultProps = {\n  children: null,\n  bold: false,\n  color: \"#222831\",\n  size: \"14px\",\n  lineHeight: 1.2,\n};\n\nconst P = styled.p`\n  color: ${(props) => props.color};\n  font-size: ${(props) => props.size};\n  font-weight: ${(props) => (props.bold ? \"600\" : \"400\")};\n  line-height: ${(props) => props.lineHeight};\n`;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\nimport { history } from \"../redux/configStore\";\nimport { Grid, Text, Button, Image } from \"../components/elements\";\nimport styled from \"styled-components\";\n\nexport default function Header(props) {\n  const user = useSelector((state) => state.user.user);\n  const toLoginPage = () => {\n    console.log(\"history\", history);\n    history.push(\"/login\");\n  };\n\n  const toSignupPage = () => {\n    history.push(\"/signup\");\n  };\n\n  return (\n    <HeaderContainer>\n      <LogoLink to=\"/\">\n        <LogoImage src=\"/images/IdeaLogo.png\" alt=\"logo\" />\n      </LogoLink>\n\n      <ButtonWrap>\n        {user ? <h1>유저 있음 로그인함</h1> : <h1>유저 없음 로그인 안함</h1>}\n        <HeaderButton onClick={toLoginPage}>Login</HeaderButton>\n        <HeaderButton onClick={toSignupPage}>Signup</HeaderButton>\n      </ButtonWrap>\n    </HeaderContainer>\n  );\n}\n\nconst HeaderContainer = styled.div`\n  background-color: #0438ae;\n  display: flex;\n  justify-content: space-between;\n  align-items: cneter;\n  width: 100%;\n  height: 70px;\n  padding: 0 20px;\n`;\n\nconst LogoLink = styled(Link)`\n  display: block;\n`;\n\nconst LogoImage = styled.img`\n  width: 150px;\n  height: 70px;\n`;\n\nconst ButtonWrap = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst HeaderButton = styled.button`\n  background-color: transparent;\n  border: 0;\n  border-radius: 3px;\n  color: #fff10a;\n  cursor: pointer;\n  font-weight: bold;\n  margin: 0 16px;\n  padding: 0;\n  position: relative;\n  min-width: 60px;\n  height: 40px;\n  line-height: 40px;\n  transition: all 0.3s;\n\n  &::after {\n    background-color: #ffffff;\n    content: \"\";\n    position: absolute;\n    height: 2px;\n    opacity: 0;\n    width: 0;\n    left: 0;\n    bottom: 0;\n    transition: all 0.3s;\n  }\n\n  &:hover {\n    color: #ffffff;\n\n    &::after {\n      width: 100%;\n      opacity: 1;\n    }\n  }\n`;\n","import React, { useState, useCallback } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { FaUserCircle } from \"react-icons/fa\";\nimport { AiOutlineHeart } from \"react-icons/ai\";\nimport { RiHeartAddLine } from \"react-icons/ri\";\nimport { AiTwotoneHeart } from \"react-icons/ai\";\nimport { RiShieldUserLine } from \"react-icons/ri\";\n\nimport { actionCreators as wishActions } from \"../redux/modules/wish\";\n\nimport { Grid, Image, Text } from \"../components/elements\";\n\nexport default function Post({ post }) {\n  const { title, spec, image, nickname, place, _id } = post;\n  const [isWished, setIsWished] = useState(false);\n  const dispatch = useDispatch();\n\n  const toggleWish = useCallback(() => {\n    if (isWished) {\n      dispatch(wishActions.deleteWishItem());\n      setIsWished(false);\n      return;\n    }\n    console.log(\"toggleWish\");\n    dispatch(wishActions.addWishItem(\"muzzi1@muzzi.com\", _id));\n    setIsWished(true);\n    return;\n    // try {\n    // } catch (err) {\n    //   console.error();\n    // } finally {\n    // }\n  }, [dispatch, isWished, _id]);\n  // 거실=1, 침실=2, 주방=3, 화장실=4, 기타=5\n  // addWishItem\n  const setPlaceName = () => {\n    switch (Number(place)) {\n      case 1:\n        return \"거실\";\n      case 2:\n        return \"침실\";\n      case 3:\n        return \"주방\";\n      case 4:\n        return \"화장실\";\n      default:\n        return \"기타\";\n    }\n  };\n\n  return (\n    <Wrap>\n      <Images src={image} alt=\"goods\" />\n      <Heart>\n        {isWished ? (\n          <AiTwotoneHeart size={20} color=\"red\" onClick={toggleWish} />\n        ) : (\n          <AiOutlineHeart size={20} onClick={toggleWish} />\n        )}\n      </Heart>\n      {/* s */}\n      <Grid padding=\"10px\">\n        <Text bold>\n          <FaUserCircle /> {nickname}\n        </Text>\n        <Text>{title}</Text>\n        <Text>추천공간 {setPlaceName()}</Text>\n        <Text>{spec}</Text>\n      </Grid>\n    </Wrap>\n  );\n}\n\nPost.defaultProps = {\n  image:\n    \"http://www.cleandropleon.com/sistema/assets/images/services/default.png\",\n};\n\nconst Images = styled.img`\n  min-height: 300px;\n  width: 100%;\n  /* height: 150px; */\n  padding: 10px;\n  margin: 0 auto;\n`;\n\nconst Wrap = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  width: 300px;\n`;\n\nconst Heart = styled.div`\n  display: flex;\n  margin-left: 150px;\n  cursor: pointer;\n  &:hover {\n    size: 25;\n  }\n`;\n\n// router.post(\"/\", authMiddleware, async (req, res) => {\n//   try {\n//     const { email, postId } = req.body;\n//     const isUser = await User.findOne({ email: email });\n//     console.log(\"isUser\", isUser);\n//     const newWish = await Wish.create({ userId: isUser._id, postId: postId });\n//     console.log(\"newWish\", newWish);\n//     res.status(200).send({ wish: newWish });\n//   } catch (err) {\n//     res.status(400).send({ err: err });\n//   }\n// });\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport styled from \"styled-components\";\nimport Slider from \"react-slick\";\n\nimport { FaChevronLeft } from \"react-icons/fa\";\nimport { FaChevronRight } from \"react-icons/fa\";\n\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\n\nimport Post from \"../components/Post\";\n\nexport default function PostList(props) {\n  const postList = useSelector((state) => state.post.list);\n  const slickSettings = {\n    dots: true, // pagination dot\n    infinite: true, // 끝이없음.\n    autoplay: true,\n    speed: 500,\n    slidesToShow: 3,\n    slidesToScroll: 1,\n  };\n  console.log(\"postList\", postList);\n\n  if (!postList?.length) {\n    return null;\n  }\n  // 거실=1, 침실=2, 주방=3, 화장실=4, 기타=5\n  return (\n    <PostListContainer>\n      {/* <IconWrap>\n        <FaChevronLeft size={30} />\n      </IconWrap> */}\n      <SliderWrap>\n        <Slider {...slickSettings}>\n          {postList.map((post) => {\n            return <Post key={post._id} post={post} />;\n          })}\n        </Slider>\n      </SliderWrap>\n      {/* <IconWrap>\n        <FaChevronRight size={30} />\n      </IconWrap> */}\n    </PostListContainer>\n  );\n}\n\nconst PostListContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: calc(100vh - 70px);\n`;\n\nconst SliderWrap = styled.div`\n  max-width: 900px;\n  margin: 0 auto;\n\n  .slick-prev,\n  .slick-next {\n    width: 30px;\n    height: 30px;\n\n    &::before {\n      color: #0438ae;\n      font-size: 30px;\n    }\n  }\n  .slick-dots {\n    li {\n      button {\n        &::before {\n          color: #0438ae;\n        }\n      }\n    }\n  }\n`;\n\nconst IconWrap = styled.div`\n  cursor: pointer;\n`;\n","import React, { Fragment, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { apis } from \"../utils/apis\";\nimport { setCookie, getCookie } from \"../utils/cookie\";\nimport { actionCreators as userActions } from \"../redux/modules/user\";\n\nimport styled from \"styled-components\";\n\nexport default function Login(props) {\n  const dispatch = useDispatch();\n  const [loginInput, setLoginInput] = useState({\n    email: \"\",\n    pw: \"\",\n  });\n\n  const onChangeLogin = ({ target }) => {\n    const { name, value } = target;\n\n    setLoginInput({\n      ...loginInput,\n      [name]: value,\n    });\n  };\n\n  // const onClickLogin = async () => {\n  //   try {\n  //     const res = await apis.login(loginInput);\n  //     console.log(\"login res\", res.data);\n  //     if (res.status === 200) {\n  //       const { token } = res.data;\n  //       setCookie(\"user\", token);\n\n  //       console.log(\"user\", getCookie(\"user\"));\n  //     }\n  //   } catch (err) {\n  //     console.log(\"err\", err);\n  //   }\n  // };\n\n  const onClickLogin = () => {\n    dispatch(userActions.loginMiddleware(loginInput));\n  };\n\n  return (\n    <Fragment>\n      <input\n        name=\"email\"\n        value={loginInput.email}\n        type=\"text\"\n        onChange={onChangeLogin}\n      />\n      <input\n        name=\"pw\"\n        value={loginInput.pw}\n        type=\"password\"\n        onChange={onChangeLogin}\n      />\n      <button onClick={onClickLogin}>로그인</button>\n    </Fragment>\n  );\n}\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { actionCreators as userActions } from \"../redux/modules/user\";\n\nimport styled from \"styled-components\";\n\nexport default function Signup(props) {\n  const dispatch = useDispatch();\n  const [signupInput, setSignupInput] = useState({\n    email: \"\",\n    pw: \"\",\n    pwCheck: \"\",\n    nickname: \"\",\n  });\n\n  const onChangeSignUp = ({ target }) => {\n    const { name, value } = target;\n\n    setSignupInput({\n      ...signupInput,\n      [name]: value,\n    });\n  };\n\n  const onClickSignup = () => {\n    console.log(signupInput);\n    dispatch(userActions.signupMiddleware(signupInput));\n  };\n\n  //const { email, pw, pwCheck, nickname } = signUpInput;\n\n  // const signUpAccount = (e) => {\n  //   const { name, value } = e.target;\n  //   setSignUpInput({\n  //     ...signUpInput,\n  //     [name]: value,\n  //   });\n  // };\n\n  // const saveSignupDB = () => {\n  //   console.log(signUpInput);\n  //   //dispatch(userActions.signupMiddleware(signUpInput));\n  // };\n  return (\n    <Wrap>\n      <input\n        name=\"email\"\n        value={signupInput.email}\n        type=\"text\"\n        onChange={onChangeSignUp}\n      />\n      <input\n        name=\"pw\"\n        value={signupInput.pw}\n        type=\"password\"\n        onChange={onChangeSignUp}\n      />\n      <input\n        name=\"pwCheck\"\n        value={signupInput.pwCheck}\n        type=\"password\"\n        onChange={onChangeSignUp}\n      />\n      <input\n        name=\"nickname\"\n        value={signupInput.nickname}\n        type=\"text\"\n        onChange={onChangeSignUp}\n      />\n      <button onClick={onClickSignup}>회원가입</button>\n    </Wrap>\n  );\n}\n\nconst Wrap = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  align-items: center;\n`;\n","import React, { Fragment } from \"react\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Post from \"../components/Post\";\n\nimport { FaChevronLeft } from \"react-icons/fa\";\nimport { FaChevronRight } from \"react-icons/fa\";\n\nimport Slider from \"react-slick\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport styled from \"styled-components\";\n\nexport default function WishList(props) {\n  const wishList = useSelector((state) => state.wish.list);\n\n  const slickSettings = {\n    dots: true, // pagination dot\n    infinite: true, // 끝이없음.\n    autoplay: true,\n    speed: 500,\n    slidesToShow: 3,\n    slidesToScroll: 1,\n  };\n\n  if (!wishList?.length) {\n    return (\n      <h1>\n        등록된 wish Item이 없습니다, <br />\n        마음에 드는 소품을 추가해보세요!\n      </h1>\n    );\n  }\n\n  return (\n    <PostListContainer>\n      <SliderWrap>\n        <Slider {...slickSettings}>\n          {wishList.map((post) => {\n            return <Post key={post._id} post={post} />;\n          })}\n        </Slider>\n      </SliderWrap>\n    </PostListContainer>\n  );\n\n  // return(\n  //   <Wrap>\n  //     <IconWrap>\n  //       <FaChevronLeft size={30} onClick/>\n  //     </IconWrap>\n  //       <Post/>\n  //       <Post/>\n  //       <Post/>\n  //     <IconWrap>\n  //       <FaChevronRight size={30} onClick/>\n  //     </IconWrap>\n  //   </Wrap>\n  // );\n}\n\nconst PostListContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: calc(100vh - 70px);\n`;\n\nconst SliderWrap = styled.div`\n  max-width: 900px;\n  margin: 0 auto;\n\n  .slick-prev,\n  .slick-next {\n    width: 30px;\n    height: 30px;\n\n    &::before {\n      color: #0438ae;\n      font-size: 30px;\n    }\n  }\n  .slick-dots {\n    li {\n      button {\n        &::before {\n          color: #0438ae;\n        }\n      }\n    }\n  }\n`;\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { ConnectedRouter } from \"connected-react-router\";\nimport { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\nimport { history } from \"../redux/configStore\";\n\nimport { actionCreators as postActions } from \"../redux/modules/post\";\nimport { actionCreators as userActions } from \"../redux/modules/user\";\n\nimport { Grid } from \"../components/elements\";\nimport Header from \"../components/Header\";\nimport PostList from \"../pages/PostList\";\nimport Login from \"../pages/Login\";\nimport Signup from \"../pages/Signup\";\nimport WishList from \"../pages/WishList\";\nimport { getCookie } from \"../utils/cookie\";\n\n// 전역 스타일지정 - 파일로 만들어도 좋다눙 ㅇㅅㅇ!\nconst GlobalStyle = createGlobalStyle`\n  ${reset}\n\n  * {\n    box-sizing: border-box;\n  }\n\n  html, body {\n    height: 100%;\n  }\n\n  #root {\n    height: 100%;\n  }\n`;\n// 1. cookie가 있는지 확인 => getcookie\nexport default function App() {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (getCookie(\"user\")) {\n      dispatch(userActions.setUser(getCookie(\"user\")));\n    }\n    dispatch(postActions.getPostList());\n  }, []);\n  //console.log(\"user\", getCookie(\"user\"));\n\n  return (\n    <React.Fragment>\n      <GlobalStyle />\n      <Grid>\n        <ConnectedRouter history={history}>\n          <Header />\n          <Switch>\n            <Route path=\"/\" exact component={PostList} />\n            <Route path=\"/login\" exact component={Login} />\n            <Route path=\"/signup\" exact component={Signup} />\n            <Route path=\"/wish/:id\" exact component={WishList} />\n          </Switch>\n        </ConnectedRouter>\n      </Grid>\n    </React.Fragment>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport store from \"./redux/configStore\";\n\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport App from \"./Shared/App\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}